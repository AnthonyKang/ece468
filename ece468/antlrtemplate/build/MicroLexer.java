// Generated from Micro.g4 by ANTLR 4.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MicroLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__30=1, T__29=2, T__28=3, T__27=4, T__26=5, T__25=6, T__24=7, T__23=8, 
		T__22=9, T__21=10, T__20=11, T__19=12, T__18=13, T__17=14, T__16=15, T__15=16, 
		T__14=17, T__13=18, T__12=19, T__11=20, T__10=21, T__9=22, T__8=23, T__7=24, 
		T__6=25, T__5=26, T__4=27, T__3=28, T__2=29, T__1=30, T__0=31, KEYWORD=32, 
		IDENTIFIER=33, FLOATLITERAL=34, INTLITERAL=35, STRINGLITERAL=36, OPERATORS=37, 
		COMMENTS=38, WHITESPACE=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"','", "'ROF'", "'*'", "'-'", "'FI'", "'PROGRAM'", "'('", "'<'", "'READ'", 
		"'END'", "'!='", "'<='", "'ELSE'", "'VOID'", "'STRING'", "'IF'", "'FOR'", 
		"'WRITE'", "')'", "'+'", "'='", "';'", "'FUNCTION'", "'>'", "'FLOAT'", 
		"':='", "'RETURN'", "'/'", "'BEGIN'", "'>='", "'INT'", "KEYWORD", "IDENTIFIER", 
		"FLOATLITERAL", "INTLITERAL", "STRINGLITERAL", "OPERATORS", "COMMENTS", 
		"WHITESPACE"
	};
	public static final String[] ruleNames = {
		"T__30", "T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", 
		"T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "ESCAPED_QUOTE", "ESCAPED_PERIOD", 
		"NEW_LINE", "CARRIAGE_RETURN", "DOUBLE_DASH", "KEYWORD", "IDENTIFIER", 
		"FLOATLITERAL", "INTLITERAL", "STRINGLITERAL", "OPERATORS", "COMMENTS", 
		"WHITESPACE"
	};


	public MicroLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Micro.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 42: COMMENTS_action((RuleContext)_localctx, actionIndex); break;

		case 43: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void COMMENTS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2)\u017b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13"+
		"\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17"+
		"\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22"+
		"\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3\25\3\26"+
		"\3\26\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3 \3"+
		" \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\3&\3&\3&\5&\u0134\n&\3\'\6\'\u0137\n\'\r\'\16\'\u0138\3"+
		"\'\3\'\6\'\u013d\n\'\r\'\16\'\u013e\5\'\u0141\n\'\3(\7(\u0144\n(\f(\16"+
		"(\u0147\13(\3(\3(\6(\u014b\n(\r(\16(\u014c\3)\6)\u0150\n)\r)\16)\u0151"+
		"\3*\3*\3*\7*\u0157\n*\f*\16*\u015a\13*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3"+
		"+\3+\5+\u0168\n+\3,\3,\3,\3,\7,\u016e\n,\f,\16,\u0171\13,\3,\3,\3-\6-"+
		"\u0176\n-\r-\16-\u0177\3-\3-\3\u0158.\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r"+
		"\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21"+
		"\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65"+
		"\34\1\67\35\19\36\1;\37\1= \1?!\1A\2\1C\2\1E\2\1G\2\1I\2\1K\"\1M#\1O$"+
		"\1Q%\1S&\1U\'\1W(\2Y)\3\3\2\n\4\2C\\c|\3\2C|\5\2\62;C\\c|\3\2\62;\4\2"+
		"\f\f\17\17\6\2,-//\61\61??\6\2*+..=>@@\5\2\13\f\17\17\"\"\u0195\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5]\3\2\2\2\7a\3\2"+
		"\2\2\tc\3\2\2\2\13e\3\2\2\2\rh\3\2\2\2\17p\3\2\2\2\21r\3\2\2\2\23t\3\2"+
		"\2\2\25y\3\2\2\2\27}\3\2\2\2\31\u0080\3\2\2\2\33\u0083\3\2\2\2\35\u0088"+
		"\3\2\2\2\37\u008d\3\2\2\2!\u0094\3\2\2\2#\u0097\3\2\2\2%\u009b\3\2\2\2"+
		"\'\u00a1\3\2\2\2)\u00a3\3\2\2\2+\u00a5\3\2\2\2-\u00a7\3\2\2\2/\u00a9\3"+
		"\2\2\2\61\u00b2\3\2\2\2\63\u00b4\3\2\2\2\65\u00ba\3\2\2\2\67\u00bd\3\2"+
		"\2\29\u00c4\3\2\2\2;\u00c6\3\2\2\2=\u00cc\3\2\2\2?\u00cf\3\2\2\2A\u00d3"+
		"\3\2\2\2C\u00d6\3\2\2\2E\u00d9\3\2\2\2G\u00db\3\2\2\2I\u00dd\3\2\2\2K"+
		"\u0133\3\2\2\2M\u0140\3\2\2\2O\u0145\3\2\2\2Q\u014f\3\2\2\2S\u0153\3\2"+
		"\2\2U\u0167\3\2\2\2W\u0169\3\2\2\2Y\u0175\3\2\2\2[\\\7.\2\2\\\4\3\2\2"+
		"\2]^\7T\2\2^_\7Q\2\2_`\7H\2\2`\6\3\2\2\2ab\7,\2\2b\b\3\2\2\2cd\7/\2\2"+
		"d\n\3\2\2\2ef\7H\2\2fg\7K\2\2g\f\3\2\2\2hi\7R\2\2ij\7T\2\2jk\7Q\2\2kl"+
		"\7I\2\2lm\7T\2\2mn\7C\2\2no\7O\2\2o\16\3\2\2\2pq\7*\2\2q\20\3\2\2\2rs"+
		"\7>\2\2s\22\3\2\2\2tu\7T\2\2uv\7G\2\2vw\7C\2\2wx\7F\2\2x\24\3\2\2\2yz"+
		"\7G\2\2z{\7P\2\2{|\7F\2\2|\26\3\2\2\2}~\7#\2\2~\177\7?\2\2\177\30\3\2"+
		"\2\2\u0080\u0081\7>\2\2\u0081\u0082\7?\2\2\u0082\32\3\2\2\2\u0083\u0084"+
		"\7G\2\2\u0084\u0085\7N\2\2\u0085\u0086\7U\2\2\u0086\u0087\7G\2\2\u0087"+
		"\34\3\2\2\2\u0088\u0089\7X\2\2\u0089\u008a\7Q\2\2\u008a\u008b\7K\2\2\u008b"+
		"\u008c\7F\2\2\u008c\36\3\2\2\2\u008d\u008e\7U\2\2\u008e\u008f\7V\2\2\u008f"+
		"\u0090\7T\2\2\u0090\u0091\7K\2\2\u0091\u0092\7P\2\2\u0092\u0093\7I\2\2"+
		"\u0093 \3\2\2\2\u0094\u0095\7K\2\2\u0095\u0096\7H\2\2\u0096\"\3\2\2\2"+
		"\u0097\u0098\7H\2\2\u0098\u0099\7Q\2\2\u0099\u009a\7T\2\2\u009a$\3\2\2"+
		"\2\u009b\u009c\7Y\2\2\u009c\u009d\7T\2\2\u009d\u009e\7K\2\2\u009e\u009f"+
		"\7V\2\2\u009f\u00a0\7G\2\2\u00a0&\3\2\2\2\u00a1\u00a2\7+\2\2\u00a2(\3"+
		"\2\2\2\u00a3\u00a4\7-\2\2\u00a4*\3\2\2\2\u00a5\u00a6\7?\2\2\u00a6,\3\2"+
		"\2\2\u00a7\u00a8\7=\2\2\u00a8.\3\2\2\2\u00a9\u00aa\7H\2\2\u00aa\u00ab"+
		"\7W\2\2\u00ab\u00ac\7P\2\2\u00ac\u00ad\7E\2\2\u00ad\u00ae\7V\2\2\u00ae"+
		"\u00af\7K\2\2\u00af\u00b0\7Q\2\2\u00b0\u00b1\7P\2\2\u00b1\60\3\2\2\2\u00b2"+
		"\u00b3\7@\2\2\u00b3\62\3\2\2\2\u00b4\u00b5\7H\2\2\u00b5\u00b6\7N\2\2\u00b6"+
		"\u00b7\7Q\2\2\u00b7\u00b8\7C\2\2\u00b8\u00b9\7V\2\2\u00b9\64\3\2\2\2\u00ba"+
		"\u00bb\7<\2\2\u00bb\u00bc\7?\2\2\u00bc\66\3\2\2\2\u00bd\u00be\7T\2\2\u00be"+
		"\u00bf\7G\2\2\u00bf\u00c0\7V\2\2\u00c0\u00c1\7W\2\2\u00c1\u00c2\7T\2\2"+
		"\u00c2\u00c3\7P\2\2\u00c38\3\2\2\2\u00c4\u00c5\7\61\2\2\u00c5:\3\2\2\2"+
		"\u00c6\u00c7\7D\2\2\u00c7\u00c8\7G\2\2\u00c8\u00c9\7I\2\2\u00c9\u00ca"+
		"\7K\2\2\u00ca\u00cb\7P\2\2\u00cb<\3\2\2\2\u00cc\u00cd\7@\2\2\u00cd\u00ce"+
		"\7?\2\2\u00ce>\3\2\2\2\u00cf\u00d0\7K\2\2\u00d0\u00d1\7P\2\2\u00d1\u00d2"+
		"\7V\2\2\u00d2@\3\2\2\2\u00d3\u00d4\7^\2\2\u00d4\u00d5\7$\2\2\u00d5B\3"+
		"\2\2\2\u00d6\u00d7\7^\2\2\u00d7\u00d8\7\60\2\2\u00d8D\3\2\2\2\u00d9\u00da"+
		"\7\f\2\2\u00daF\3\2\2\2\u00db\u00dc\7\17\2\2\u00dcH\3\2\2\2\u00dd\u00de"+
		"\7/\2\2\u00de\u00df\7/\2\2\u00dfJ\3\2\2\2\u00e0\u00e1\7R\2\2\u00e1\u00e2"+
		"\7T\2\2\u00e2\u00e3\7Q\2\2\u00e3\u00e4\7I\2\2\u00e4\u00e5\7T\2\2\u00e5"+
		"\u00e6\7C\2\2\u00e6\u0134\7O\2\2\u00e7\u00e8\7D\2\2\u00e8\u00e9\7G\2\2"+
		"\u00e9\u00ea\7I\2\2\u00ea\u00eb\7K\2\2\u00eb\u0134\7P\2\2\u00ec\u00ed"+
		"\7G\2\2\u00ed\u00ee\7P\2\2\u00ee\u0134\7F\2\2\u00ef\u00f0\7H\2\2\u00f0"+
		"\u00f1\7W\2\2\u00f1\u00f2\7P\2\2\u00f2\u00f3\7E\2\2\u00f3\u00f4\7V\2\2"+
		"\u00f4\u00f5\7K\2\2\u00f5\u00f6\7Q\2\2\u00f6\u0134\7P\2\2\u00f7\u00f8"+
		"\7T\2\2\u00f8\u00f9\7G\2\2\u00f9\u00fa\7C\2\2\u00fa\u0134\7F\2\2\u00fb"+
		"\u00fc\7Y\2\2\u00fc\u00fd\7T\2\2\u00fd\u00fe\7K\2\2\u00fe\u00ff\7V\2\2"+
		"\u00ff\u0134\7G\2\2\u0100\u0101\7K\2\2\u0101\u0134\7H\2\2\u0102\u0103"+
		"\7G\2\2\u0103\u0104\7N\2\2\u0104\u0105\7U\2\2\u0105\u0134\7G\2\2\u0106"+
		"\u0107\7H\2\2\u0107\u0134\7K\2\2\u0108\u0109\7H\2\2\u0109\u010a\7Q\2\2"+
		"\u010a\u0134\7T\2\2\u010b\u010c\7T\2\2\u010c\u010d\7Q\2\2\u010d\u0134"+
		"\7H\2\2\u010e\u010f\7E\2\2\u010f\u0110\7Q\2\2\u0110\u0111\7P\2\2\u0111"+
		"\u0112\7V\2\2\u0112\u0113\7K\2\2\u0113\u0114\7P\2\2\u0114\u0115\7W\2\2"+
		"\u0115\u0134\7G\2\2\u0116\u0117\7D\2\2\u0117\u0118\7T\2\2\u0118\u0119"+
		"\7G\2\2\u0119\u011a\7C\2\2\u011a\u0134\7M\2\2\u011b\u011c\7T\2\2\u011c"+
		"\u011d\7G\2\2\u011d\u011e\7V\2\2\u011e\u011f\7W\2\2\u011f\u0120\7T\2\2"+
		"\u0120\u0134\7P\2\2\u0121\u0122\7K\2\2\u0122\u0123\7P\2\2\u0123\u0134"+
		"\7V\2\2\u0124\u0125\7X\2\2\u0125\u0126\7Q\2\2\u0126\u0127\7K\2\2\u0127"+
		"\u0134\7F\2\2\u0128\u0129\7U\2\2\u0129\u012a\7V\2\2\u012a\u012b\7T\2\2"+
		"\u012b\u012c\7K\2\2\u012c\u012d\7P\2\2\u012d\u0134\7I\2\2\u012e\u012f"+
		"\7H\2\2\u012f\u0130\7N\2\2\u0130\u0131\7Q\2\2\u0131\u0132\7C\2\2\u0132"+
		"\u0134\7V\2\2\u0133\u00e0\3\2\2\2\u0133\u00e7\3\2\2\2\u0133\u00ec\3\2"+
		"\2\2\u0133\u00ef\3\2\2\2\u0133\u00f7\3\2\2\2\u0133\u00fb\3\2\2\2\u0133"+
		"\u0100\3\2\2\2\u0133\u0102\3\2\2\2\u0133\u0106\3\2\2\2\u0133\u0108\3\2"+
		"\2\2\u0133\u010b\3\2\2\2\u0133\u010e\3\2\2\2\u0133\u0116\3\2\2\2\u0133"+
		"\u011b\3\2\2\2\u0133\u0121\3\2\2\2\u0133\u0124\3\2\2\2\u0133\u0128\3\2"+
		"\2\2\u0133\u012e\3\2\2\2\u0134L\3\2\2\2\u0135\u0137\t\2\2\2\u0136\u0135"+
		"\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139"+
		"\u0141\3\2\2\2\u013a\u013c\t\3\2\2\u013b\u013d\t\4\2\2\u013c\u013b\3\2"+
		"\2\2\u013d\u013e\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f"+
		"\u0141\3\2\2\2\u0140\u0136\3\2\2\2\u0140\u013a\3\2\2\2\u0141N\3\2\2\2"+
		"\u0142\u0144\t\5\2\2\u0143\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143"+
		"\3\2\2\2\u0145\u0146\3\2\2\2\u0146\u0148\3\2\2\2\u0147\u0145\3\2\2\2\u0148"+
		"\u014a\7\60\2\2\u0149\u014b\t\5\2\2\u014a\u0149\3\2\2\2\u014b\u014c\3"+
		"\2\2\2\u014c\u014a\3\2\2\2\u014c\u014d\3\2\2\2\u014dP\3\2\2\2\u014e\u0150"+
		"\t\5\2\2\u014f\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151\u014f\3\2\2\2\u0151"+
		"\u0152\3\2\2\2\u0152R\3\2\2\2\u0153\u0158\7$\2\2\u0154\u0157\5A!\2\u0155"+
		"\u0157\n\6\2\2\u0156\u0154\3\2\2\2\u0156\u0155\3\2\2\2\u0157\u015a\3\2"+
		"\2\2\u0158\u0159\3\2\2\2\u0158\u0156\3\2\2\2\u0159\u015b\3\2\2\2\u015a"+
		"\u0158\3\2\2\2\u015b\u015c\7$\2\2\u015cT\3\2\2\2\u015d\u015e\7<\2\2\u015e"+
		"\u0168\7?\2\2\u015f\u0168\t\7\2\2\u0160\u0161\7#\2\2\u0161\u0168\7?\2"+
		"\2\u0162\u0168\t\b\2\2\u0163\u0164\7>\2\2\u0164\u0168\7?\2\2\u0165\u0166"+
		"\7@\2\2\u0166\u0168\7?\2\2\u0167\u015d\3\2\2\2\u0167\u015f\3\2\2\2\u0167"+
		"\u0160\3\2\2\2\u0167\u0162\3\2\2\2\u0167\u0163\3\2\2\2\u0167\u0165\3\2"+
		"\2\2\u0168V\3\2\2\2\u0169\u016a\7/\2\2\u016a\u016b\7/\2\2\u016b\u016f"+
		"\3\2\2\2\u016c\u016e\n\6\2\2\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f"+
		"\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u0172\3\2\2\2\u0171\u016f\3\2"+
		"\2\2\u0172\u0173\b,\2\2\u0173X\3\2\2\2\u0174\u0176\t\t\2\2\u0175\u0174"+
		"\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178"+
		"\u0179\3\2\2\2\u0179\u017a\b-\3\2\u017aZ\3\2\2\2\17\2\u0133\u0138\u013e"+
		"\u0140\u0145\u014c\u0151\u0156\u0158\u0167\u016f\u0177";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}